<type expression>     ::= <name> <type parameters>? 
                        | <type literal>
                        | <type expression> "|" <type expression>
<type parameters>     ::= "(" <parameter list> ")"
<parameter list>      ::= <type expression> 
                        | <parameter list> "," <type expression>
<type literal>        ::= <boolean literal>
                        | <integer literal>
                        | <decimal literal>
                        | "/" <regex> "/"
                        | "_" <string> "_"
                        | "null"
                        | "*"
<boolean literal>     ::= "true" 
                        | "false" 
<integer literal>     ::= <integer>
                        | <integer interval>
<integer interval>    ::= <integer>? ".." <integer>? <integer step>?
<integer step>        ::= "/" <integer>
<decimal literal>     ::= <decimal>
                        | <decimal interval>
<decimal interval>    ::= <decimal>? "..." <decimal>? <decimal step>?
<decimal step>        ::= "/" <decimal>


<name>                (alphanumeric, possibly with - and _, without spaces, at least one alpha character)
<integer>             (signed integer form, possibly with exponention)
<decimal>             (signed decimal form, possibly with exponention)
<regex>               (valid regex form, but / escaped with /)
<string>              (any string, but _ escaped with _)

