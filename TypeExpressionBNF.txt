<type expression>     ::= <name> <type parameter>*
                        | <type literal>
                        | <type expression> "|" <type expression>
<type parameter>      ::= "[" <type expression> "]"
<type literal>        ::= <boolean range>
                        | <integer range>
                        | <decimal range>
                        | "/" <regex> "/"
                        | "null"
                        | "*"
<boolean range>       ::= "true" 
                        | "false" 
                        | "any"
<integer range>       ::= <integer>
                        | <integer interval>
                        | <integer range> "," <integer range>
<integer interval>    ::= <integer>? ".." <integer>? <integer step>?
<integer step>        ::= "/" <integer>
<decimal range>       ::= <decimal>
                        | <decimal interval>
                        | <decimal range> "," <decimal range>
<decimal interval>    ::= <decimal>? "..." <decimal>? <decimal step>?
<decimal step>        ::= "/" <decimal>


<name>                (alphanumeric, possibly with - and _, without spaces, at least one alpha character)
<integer>             (signed integer form, possibly with exponention)
<decimal>             (signed decimal form, possibly with exponention)
<regex>               (valid regex form, but any } escaped as \})

