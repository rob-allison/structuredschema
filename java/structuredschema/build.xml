<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="structuredschema" basedir="." default="package">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
	<property name="rootdir" location="${basedir}/../.."/>
    <path id="structuredschema.classpath">
        <pathelement location="bin"/>
    </path>
    <path id="structuredschema.testclasspath">
    	<pathelement location="bin"/>
        <pathelement location="testbin"/>
    	<fileset dir="lib/test">
    	    <include name="*.jar"/>
    	</fileset>
    </path>
	
    <target name="clean">
        <delete dir="bin"/>
    	<delete dir="testbin"/>
    </target>
	
    <target name="init" depends="clean">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/main/java">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    	<mkdir dir="testbin"/>
		<copy includeemptydirs="false" todir="testbin">
			<fileset dir="src/test/java">
				<exclude name="**/*.launch"/>
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
    </target>
	
    <target name="build" depends="init">
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/main/java"/>
            <classpath refid="structuredschema.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="testbin" includeantruntime="false" source="${source}" target="${target}">
             <src path="src/test/java"/>
             <classpath refid="structuredschema.testclasspath"/>
         </javac>
    </target>
	
	<target name="test" depends="build">
		<junit printsummary="on">
			<sysproperty key="rootdir" value="${rootdir}"/>
			<classpath refid="structuredschema.testclasspath"/>
			<batchtest>
				<fileset dir="testbin" includes="**/*Test.class" />
				<formatter type="plain" usefile="false"/>
			</batchtest>
		</junit>
	</target>
	
	<target name="package" depends="test">
	    <exec executable="git" outputproperty="git.commit.hash" failifexecutionfails="true" errorproperty="">
	        <arg value="rev-parse"/>
	        <arg value="HEAD"/>
	    </exec>
		<exec executable="git" outputproperty="git.commit.time" failifexecutionfails="true" errorproperty="">
			<arg value="log"/>
			<arg value="-1"/>
			<arg value="--format=%ci"/>
		</exec>
		<exec executable="git" outputproperty="git.branch.name" failifexecutionfails="true" errorproperty="">
			<arg value="symbolic-ref"/>
			<arg value="--short"/>
			<arg value="HEAD"/>
		</exec>
		<exec executable="git" output="bin/git_status.txt" failifexecutionfails="true" errorproperty="">
			<arg value="status"/>
			<arg value="--short"/>
		</exec>
		<exec executable="git" output="bin/git_tags.txt" failifexecutionfails="true" errorproperty="">
			<arg value="tag"/>
			<arg value="--points-at"/>
			<arg value="HEAD"/>
		</exec>

		<loadfile property="git.tags" srcFile="bin/git_tags.txt">
			<filterchain>
				<suffixlines suffix=" "/>
				<striplinebreaks/>
		    </filterchain>
		</loadfile>
		<delete file="bin/git_tags.txt" />
		<property name="git.tags" value="" />
		
		<condition property="git.clean" value="true" else="false">
		     <length file="bin/git_status.txt" when="equal" length="0" />
		</condition>
		
		<delete>
			<fileset dir="bin" includes="git_status.txt">
				<size value="0" when="equal"/>
			</fileset>
		</delete>
		
		<jar destfile="structuredschema.jar">
			<manifest>
				<attribute name="Git-Commit-Hash" value="${git.commit.hash}"/>
				<attribute name="Git-Commit-Time" value="${git.commit.time}"/>
				<attribute name="Git-Branch-Name" value="${git.branch.name}"/>
				<attribute name="Git-Tags" value="${git.tags}"/>
				<attribute name="Git-Clean" value="${git.clean}"/>
			</manifest>
		 	<fileset dir="bin"/>
		</jar>
	</target>
</project>
